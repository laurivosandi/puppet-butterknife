#!/bin/bash

if [ $UID -ne 0 ]; then
  echo 'Run as root with sudo!'
  exit 255
fi

if [ ! -e /usr/bin/dig ]; then
    echo "No command 'dig' available, please: apt-get install dnsutils"
    exit 2
fi

if [ ! -e /usr/bin/net ]; then
    echo "No command 'net' available, please: apt-get install samba-common"
    exit 3
fi

set -e

########################
### Prompt hostname  ###
########################

if [ -z $BUTTERKNIFE_HOSTNAME ]; then
    if [ -e /var/butterknife/persistent/hostname ]; then
        BUTTERKNIFE_HOSTNAME=$(cat /var/butterknife/persistent/hostname)
    else
        BUTTERKNIFE_HOSTNAME=$(cat /etc/hostname)
    fi
    BUTTERKNIFE_HOSTNAME=$(dialog --max-input 15 --inputbox "Enter hostname" 0 0 $BUTTERKNIFE_HOSTNAME 2>&1 >$(tty))
fi


# Generate NetBIOS name and hostname
NMBNAME=$(echo $BUTTERKNIFE_HOSTNAME | tr '[:lower:]' '[:upper:]')
HOSTNAME=$(echo $BUTTERKNIFE_HOSTNAME | tr '[:upper:]' '[:lower:]')


######################
### Prompt domain  ###
######################

if [ -z $BUTTERKNIFE_DOMAIN ]; then
    if [ -e /etc/krb5.conf ]; then
        BUTTERKNIFE_DOMAIN=$(cat /etc/krb5.conf  | grep "^default_realm.*=" | tr '[:upper:]' '[:lower:]' | cut -d '=' -f 2 | xargs)
    fi
    BUTTERKNIFE_DOMAIN=$(dialog --inputbox "Enter domain" 0 0 $BUTTERKNIFE_DOMAIN 2>&1 >$(tty))
fi

DOMAIN=$(echo $BUTTERKNIFE_DOMAIN | tr '[:upper:]' '[:lower:]')
REALM=$(echo $BUTTERKNIFE_DOMAIN | tr '[:lower:]' '[:upper:]')
FQDN=$HOSTNAME.$DOMAIN


#########################
### Prompt workgroup  ###
#########################

if [ -z $BUTTERKNIFE_WORKGROUP ]; then
    if [ -e /etc/samba/smb.conf ]; then
        BUTTERKNIFE_WORKGROUP=$(cat /etc/samba/smb.conf | grep ^workgroup.*= | cut -d '=' -f 2 | xargs)
    else
        BUTTERKNIFE_WORKGROUP=$(echo $REALM | rev | cut -d . -f 2 | rev)
    fi
    BUTTERKNIFE_WORKGROUP=$(dialog --inputbox "Enter workgroup" 0 0 $BUTTERKNIFE_WORKGROUP 2>&1 >$(tty))
fi

WORKGROUP=$(echo $BUTTERKNIFE_WORKGROUP | tr '[:lower:]' '[:upper:]')

################################################
### Prompt joiner account username/password  ###
################################################

USERNAME=$(dialog --inputbox "Enter username" 0 0 Administrator 2>&1 >$(tty))
PASSWORD=$(dialog --insecure --passwordbox "Enter password for $USERNAME@$REALM" 0 0 2>&1 >$(tty))

clear

set +e


clear
echo "About to join $HOSTNAME to domain $DOMAIN, fully qualified name is $FQDN"
echo "Using Kerberos realm: $REALM"
echo "Using NetBIOS name $NMBNAME and workgroup $WORKGROUP"

if [ -x /usr/sbin/sssd ]; then
    METHOD=sss
    echo "Using SSSD to configure domain-enabled login"
elif [ -x /usr/sbin/winbindd ]; then
    METHOD=winbind
    echo "Using Winbind to configure domain-enabled login"
else
    METHOD=skip
    echo "No SSSD or Winbind PAM modules detected! Please: apt-get install libpam-sss libnss-sss sssd"
fi

read -p "Press Enter to continue or Ctrl-C to abort..."


####################
### Set hostname ###
####################

echo $HOSTNAME > /etc/hostname
sed -i -e "s/^PRETTY_HOSTNAME=.*/PRETTY_HOSTNAME=$HOSTNAME/" /etc/machine-info

if [ -d /var/butterknife/persistent ]; then
    echo $HOSTNAME > /var/butterknife/persistent/hostname
fi

sed -i -e "s/127\.0\.1\.1.*$/127.0.1.1 $FQDN $HOSTNAME/g" /etc/hosts

##########################
### Set Kerberos realm ###
##########################

cat > /etc/krb5.conf << EOF
[libdefaults]
default_realm = $REALM
dns_lookup_realm = true
dns_lookup_kdc = true
forwardable = true
proxiable = true
EOF


####################################
### Generate /etc/samba/smb.conf ###
####################################

cat > /etc/samba/smb.conf << EOF
[global]
security = ads
netbios name = $NMBNAME
workgroup = $WORKGROUP
realm = $REALM
kerberos method = system keytab

# Kill NetBIOS
disable netbios = yes
smb ports = 445

# UNIX attribute templates for rid backend
template homedir = /home/%U
template shell = /bin/bash

# Reserve 1 000 000 to 16 777 216 for algorithmically generated UID-s
idmap config *:range = 1000000-16777216
idmap config *:backend = rid

# libpam-winbind config
winbind nss info = rfc2307
winbind trusted domains only = no
winbind use default domain = yes
winbind enum users  = no
winbind enum groups = no
winbind refresh tickets = yes
client ldap sasl wrapping = seal
EOF


#####################################################
### This populates keytab and creates secrets.tdb ###
#####################################################

net ads join -U $USERNAME%$PASSWORD


#################################################
### Setup LDAP client config and certificates ###
#################################################

LDAP_CERT=/etc/ldap/domain.pem
LDAP_SRV=$(dig -t SRV _ldap._tcp.$DOMAIN +short | xargs)
LDAP_PORT=$(echo $LDAP_SRV | cut -d ' ' -f 3)
LDAP_HOSTNAME=$(echo $LDAP_SRV | cut -d ' ' -f 4)
LDAP_BASE=$(for j in $(echo $DOMAIN | tr '.' '\n'); do echo dc=$j; done | paste  -s -d ',')


if [ ! -e $LDAP_CERT ]; then
    openssl s_client -showcerts -connect $LDAP_HOSTNAME:636 < /dev/null | openssl x509 > $LDAP_CERT
fi

cat > /etc/ldap/ldap.conf << EOF
BASE $LDAP_BASE
URI ldap://$LDAP_HOSTNAME:$LDAP_PORT ldaps://$LDAP
TLS_CACERT $LDAP_CERT
EOF


##############################################################################
### Symlink /etc/sudoers-available.d/$DOMAIN to /etc/sudoers/domain-admins ###
##############################################################################

rm -f /etc/sudoers.d/domain-admins

if [ -e /etc/sudoers-available.d/$DOMAIN ]; then
    ln -s /etc/sudoers-available.d/$DOMAIN /etc/sudoers.d/domain-admins
fi


if [ $METHOD == "skip" ]; then
    exit 0
fi

##################
### Set up PAM ###
##################

cat > /etc/pam.d/common-account << EOF
#%PAM-1.0
account [success=1 new_authtok_reqd=done default=ignore] pam_unix.so
account requisite pam_deny.so
account required pam_permit.so
account sufficient pam_localuser.so
account [default=bad success=ok user_unknown=ignore] pam_$METHOD.so
EOF

cat > /etc/pam.d/common-auth << EOF
#%PAM-1.0
auth required pam_group.so use_first_pass
auth [success=2 default=ignore] pam_unix.so nullok_secure try_first_pass
auth [success=1 default=ignore] pam_$METHOD.so use_first_pass
auth requisite pam_deny.so
auth required pam_permit.so
auth optional pam_cap.so
EOF

if [ $METHOD == "winbind" ]; then
    sed -i -e 's/pam_winbind.so/pam_winbind.so krb5_auth krb5_ccache_type=FILE/' /etc/pam.d/common-auth
fi

cat > /etc/pam.d/common-session << EOF
#%PAM-1.0
session [default=1] pam_permit.so
session requisite pam_deny.so
session required pam_permit.so
session optional pam_umask.so
session required pam_mkhomedir.so umask=0077
session required pam_unix.so
session optional pam_$METHOD.so
session optional pam_systemd.so
session optional pam_ck_connector.so nox11
EOF

cat > /etc/pam.d/common-password << EOF
#%PAM-1.0
password requisite pam_pwquality.so retry=3
password [success=2 default=ignore] pam_unix.so obscure use_authtok try_first_pass sha512
password sufficient pam_$METHOD.so use_authtok
password requisite pam_deny.so
password required pam_permit.so
EOF

##########################
### Set up SSSD config ###
##########################

mkdir -p /etc/sssd

cat > /etc/sssd/sssd.conf << EOF
[sssd]
services = nss, pam
config_file_version = 2
domains = $DOMAIN

[nss]
fallback_homedir = /home/%u
override_shell = /bin/bash

[pam]

[domain/$DOMAIN]
id_provider = ad
auth_provider = ad
access_provider = ad
chpass_provider = ad
sudo_provider = ad
cache_credentials = true
dyndns_update = false
krb5_use_enterprise_principal = false
ldap_disable_referrals = true
EOF

chmod 0600 /etc/sssd/sssd.conf

# Set nsswitch
sed -i -e "s/^passwd:.*/passwd: compat $METHOD/" /etc/nsswitch.conf
sed -i -e "s/^group:.*/group: compat $METHOD/" /etc/nsswitch.conf
sed -i -e "s/^shadow:.*/shadow: compat/" /etc/nsswitch.conf

if [ -e /run/samba/winbindd.pid ] || [ -e /run/sssd.pid ]; then
    RESTART=yes
fi

#####################
### Stop services ###
#####################

service smbd stop
service nmbd stop
service winbind stop
service sssd stop

####################
### Purge caches ###
####################

net cache flush
rm -f /var/lib/sss/db/*
rm -f /var/lib/samba/*.tdb
rm -f /var/lib/samba/group_mapping.ldb


######################
### Start services ###
######################

service smb start

case $METHOD in
   sss)
        if [ -d /etc/init ]; then
            echo manual > /etc/init/winbind.override
            rm -f /etc/init/sssd.override
        else
            update-rc.d -f winbind remove
            update-rc.d sssd defaults
        fi

        if [ $RESTART ]; then
            echo "Starting sssd..."
            service sssd start
        else
            echo "Warning: sssd is not running..."
        fi
    ;;
    winbind)

        if [ -d /etc/init ]; then
            echo manual > /etc/init/sssd.override
            rm -f /etc/init/winbind.override
        else
            update-rc.d -f sssd remove
            update-rc.d winbind defaults
        fi

        if [ $RESTART ]; then
            echo "Starting winbind..."
            service winbind restart
        else
            echo "Warning: winbind is not running!"
        fi

    ;;
esac

